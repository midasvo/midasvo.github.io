---
layout: post
title:  "Git cheat sheet - most used commands"
date:   2018-01-26 00:00:00
categories: jekyll github git featured
description: "Git cheatsheet. "
status: draft

images:

  - url: /assets/images/github/Octocat.jpg
    alt: Git cheat sheet - most used commands
    title: Git cheat sheet - most used commands

---

# Git Cheat sheet

** Still a work in progress :-) **

* TOC
{:toc}

## Customization
<div class="inputbinder">
  <span>Git repository: </span>
  <input type="text" id="gitrepo" name="gitrepo" value="repo" />
</div>

<div class="inputbinder">
  <span>Git username: </span>
  <input type="text" id="gitusername" name="gitusername" value="username" />
</div>

I did add the option to inputbind your Git password, but if you do not feel comfortable inputting passwords into this site I recommend copying the command into a text editor and adding it there. You can also use Github's GUI to retrieve the SSH URL, how to do this is shown later.

<div class="inputbinder">
  <span>Git password: </span>
  <input type="text" id="gitpassword" name="gitpassword" value="password" />
</div>

## Starter commands

### Adding an existing remote to an existing project directory

Initialize a git repository in the directory

`git init`

Add the git repository as origin

`git remote add origin #@GITREPO@#`

Set branch to master

`git config branch.master.remote origin`

`git config branch.master.merge refs/heads/master`

Pull any files from repository (like README or LICENSE files)

`git pull`

Create a push-helper

Instead of using the inputbinder on this site to generate the Git URL you can also use the GUI to find the SSH url. Go to your repositories' page and click on SSH.

![alt text](/assets/images/git-cheatsheet/use-ssh.png "Logo Title Text 1")

Copy the link to your clipboard

![alt text](/assets/images/git-cheatsheet/copy-to-clipboard.png "Logo Title Text 1")


`sudo nano push.sh`

```
  #!/bin/bash
  echo "Pushing changes..."
  git push https://#@GITUSERNAME@#:#@GITPASSWORD@#@github.com/#@GITUSERNAME@#/#@GITREPO@#.git
  echo "Script finished"
```

Add the `push.sh` file to your `.gitignore`

`echo '/push.sh' >> .gitignore`

Make the `push.sh` file executable

`sudo chmod +x push.sh`

Add changed files to staging

`git add .`

Commit staged files

`git commit -m "Initial commit"`

Use `push.sh` to push changes

`. push.sh`

If you would like to use aliases for running the push command, check out my blog post about bash [here](Useful-bash).

However great using the Git command line is, there are plenty of other ways to work with the Git protocol. The, in my opinion, two greatest candidates are [GitKraken]() (cross-platform) and [SourceTree]() (Windows).

<script src='https://rawgit.com/midasvo/inputbinderjs/master/inputBinder.js'></script>
<script type='text/javascript'>
  new inputBinder("gitrepo", ['div', 'p', 'code', 'span'], "#@GITREPO@#", "dynamic-text-template-pathname-gitrepo");
  new inputBinder("gitusername", ['div', 'p', 'code', 'span'], "#@GITUSERNAME@#", "dynamic-text-template-pathname-gitusername");
  new inputBinder("gitpassword", ['div', 'p', 'code', 'span'], "#@GITPASSWORD@#", "dynamic-text-template-pathname-gitpassword");
</script>
